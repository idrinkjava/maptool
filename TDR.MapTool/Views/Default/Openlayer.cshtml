
@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <title>openlayer</title>
    <link href="~/Scripts/openlayer/ol.css" rel="stylesheet" />
    <style type="text/css">
        .leftDiv {
            width: 250px;
            float: left;
        }

            .leftDiv button {
                margin-right: 5px;
                margin-top: 5px;
            }

            .leftDiv ul {
                margin: 0;
                padding: 0;
                list-style: none;
            }

                .leftDiv ul li {
                    margin: 5px;
                    padding: 0;
                }

        .rightDiv {
            float: left;
            width: calc(100% - 251px);
            border-left: 1px solid rgb(178,178,178);
        }
    </style>
</head>
<body style="margin:0;padding:0">
    <div>
        <div class="leftDiv">
            <ul>
                <li><button id="btnAddMarker">添加单个标注</button></li>
                <li><button id="btnAddPolyline">添加线</button></li>
                <li><button id="btnAddCircle">添加圆</button></li>
                <li><button id="btnAddRectangle">添加矩形</button></li>
                <li><button id="btnAddPolygon">添加多边形</button></li>
                <li><button id="btnDragRectangle">拉框查找</button></li>
                <li><button id="btnDragCircle">拉圆查找</button></li>
                <li><button id="btnAddTrack">绘制轨迹</button></li>
                <li><button id="btnTackPlayback">轨迹回放</button></li>
                <li>
                    <button id="btnDrawPoint">绘制点</button><button id="btnDrawPolyline">绘制线</button><button id="btnDrawCircle">绘制圆形</button><br />
                    <button id="btnDrawRect">绘制矩形</button>
                    <button id="btnDrawPolygon">绘制多边形</button>
                    <button id="btnClearDraw">退出绘制模式</button><br />
                    <textarea id="txtDrawData" style="width:230px;height:80px; margin-top:5px;background-color:#eee;" readonly="readonly"></textarea>
                </li>
                <li><button id="btnClear">清空地图</button></li>
            </ul>
        </div>
        <div id="map" class="map rightDiv"></div>
    </div>
    <script type="text/javascript" src="~/Scripts/openlayer/ol.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script type="text/javascript">
        var map;
        $(function () {
            //计算map容器的高度和宽度
            $("#map").height($(document).innerHeight());

            //初始化地图
            initMap();

            //添加标注
            $("#btnAddMarker").click(function () {
                var iconFeature = new ol.Feature({
                    geometry: new ol.geom.Point([120.49040, 30.08431]),
                    name: 'test marker'
                });

                var iconStyle = new ol.style.Style({
                    image: new ol.style.Icon(({
                        anchor: [0.5, 26],
                        anchorXUnits: 'fraction',
                        anchorYUnits: 'pixels',
                        src: '/Content/images/mapPosition/policeCabinet_on.png'
                    }))
                });

                iconFeature.setStyle(iconStyle);

                var vectorSource = new ol.source.Vector({
                    features: [iconFeature]
                });

                var vectorLayer = new ol.layer.Vector({
                    title: "markerLayer",
                    name: "qwert",
                    source: vectorSource
                });
                map.addLayer(vectorLayer);
                map.getView().setCenter([120.49040, 30.08431]);
            });

            //添加线段
            $("#btnAddPolyline").click(function () {
                var feature = new ol.Feature({
                    geometry: new ol.geom.LineString(
                        [[120.45937220611572, 30.09847206359863],
                        [120.46546618499755, 30.09563965087891],
                        [120.46546618499755, 30.09563965087891],
                        [120.47447840728759, 30.091519777832033],
                        [120.47816912689208, 30.092463915405276],
                        [120.48091570892333, 30.09538215881348],
                        [120.48185984649658, 30.09563965087891],
                        [120.4872671798706, 30.094266359863283],
                        [120.4898421005249, 30.0938372064209],
                        [120.49593607940673, 30.092549746093752],
                        [120.49636523284912, 30.092721407470705],
                        [120.49782435455322, 30.096412127075197]], "XY")
                });
                feature.setStyle(new ol.style.Style({
                    stroke: new ol.style.Stroke({
                        width: 8,
                        color: [138, 43, 226, 0.9]
                    })
                }));
                var vectorSource = new ol.source.Vector({
                    features: [feature]
                });
                var vectorLayer = new ol.layer.Vector({
                    source: vectorSource
                });
                map.addLayer(vectorLayer);
                map.getView().setCenter([120.49040, 30.08431]);
            });

            var draw = null;
            //绘点
            $("#btnDrawPoint").click(function () {
                //map.once('click', function (e) {
                //    var coord = e.coordinate;
                //    $('#txtDrawData').val(coord[0] + "," + coord[1]);
                //});
                map.removeInteraction(draw);
                var source = new ol.source.Vector();
                var vector = new ol.layer.Vector({
                    source: source
                });
                map.addLayer(vector);
                draw = new ol.interaction.Draw({
                    source: source,
                    type: 'Point'
                });
                draw.on("drawend", function (obj) {
                    var pointArry = obj.feature.getGeometry().getCoordinates();
                    $('#txtDrawData').val(pointArry[0] + "," + pointArry[1]);
                });
                map.addInteraction(draw);
            });

            //绘线
            $("#btnDrawPolyline").click(function () {
                map.removeInteraction(draw);
                var source = new ol.source.Vector();
                var vector = new ol.layer.Vector({
                    source: source
                });
                map.addLayer(vector);
                draw = new ol.interaction.Draw({
                    source: source,
                    type: 'LineString'
                });
                draw.on("drawend", function (obj) {
                    var strPoints = "";
                    for (var i = 0, arryPoints = obj.feature.getGeometry().getCoordinates(); i < arryPoints.length; i++) {
                        strPoints += arryPoints[i][0] + "," + arryPoints[i][1] + ";";
                    }
                    $('#txtDrawData').val(strPoints.substring(0, strPoints.length - 1));
                });
                map.addInteraction(draw);
            });

            //退出绘制模式
            $("#btnClearDraw").click(function () {
                map.removeInteraction(draw);
            });
        });
        //初始化天地图
        function initMap() {
            var projection = ol.proj.get('EPSG:4326');
            var projectionExtent = projection.getExtent();
            var size = ol.extent.getWidth(projectionExtent) / 256;
            var resolutions = new Array(22);
            var matrixIds = new Array(22);
            for (var z = 0; z <= 22; ++z) {
                resolutions[z] = size / Math.pow(2, z);
                matrixIds[z] = z;
            }
            map = new ol.Map({
                logo: false,
                layers: [
                    new ol.layer.Tile({
                        name: "baseVec",
                        source: new ol.source.WMTS({
                            url: 'http://t{0-7}.tianditu.com/vec_c/wmts',
                            layer: 'vec',
                            format: 'tiles',
                            tileGrid: new ol.tilegrid.WMTS({
                                origin: ol.extent.getTopLeft(projectionExtent),
                                resolutions: resolutions,
                                matrixIds: matrixIds,
                            }),
                            matrixSet: "c", style: 'default'
                        })
                    }),
                    new ol.layer.Tile({
                        name: "baseCva",
                        source: new ol.source.WMTS({
                            url: 'http://t{0-7}.tianditu.com/cva_c/wmts',
                            layer: 'cva',
                            format: 'tiles',
                            tileGrid: new ol.tilegrid.WMTS({
                                origin: ol.extent.getTopLeft(projectionExtent),
                                resolutions: resolutions,
                                matrixIds: matrixIds,
                            }),
                            matrixSet: "c", style: 'default'
                        })
                    })
                ],
                target: 'map',
                controls: ol.control.defaults({
                    attributionOptions: ({
                        collapsible: true
                    })
                }),
                view: new ol.View({
                    center: [120.49038, 30.08370],
                    projection: ol.proj.get("EPSG:4326"),
                    zoom: 14
                })
            });
            map.addControl(new ol.control.MousePosition());
            map.addControl(new ol.control.ZoomSlider());
            map.getView().on("change:resolution", function () {
                var zoom = map.getView().getZoom();
                if (!(typeof zoom === 'number' && zoom % 1 === 0)) {
                    return;
                }
                console.log(zoom);
                if (zoom <= 14) {
                    var s1 = new ol.source.WMTS({
                        url: 'http://t{0-7}.tianditu.com/vec_c/wmts',
                        layer: 'vec',
                        format: 'tiles',
                        tileGrid: new ol.tilegrid.WMTS({
                            origin: ol.extent.getTopLeft(projectionExtent),
                            resolutions: resolutions,
                            matrixIds: matrixIds,
                        }),
                        matrixSet: "c", style: 'default'
                    });
                    var l1 = map.getLayers().getArray()[0];
                    l1.setSource(s1);

                    var s2 = new ol.source.WMTS({
                        url: 'http://t{0-7}.tianditu.com/cva_c/wmts',
                        layer: 'cva',
                        format: 'tiles',
                        tileGrid: new ol.tilegrid.WMTS({
                            origin: ol.extent.getTopLeft(projectionExtent),
                            resolutions: resolutions,
                            matrixIds: matrixIds,
                        }),
                        matrixSet: "c", style: 'default'
                    });
                    var l2 = map.getLayers().getArray()[1];
                    l2.setSource(s2);
                }
                else if (zoom >= 15 && zoom <= 17) {
                    var s1 =  new ol.source.WMTS({
                        url: 'http://srv.zjditu.cn/ZJEMAP_2D/wmts',
                        layer: 'vec',
                        format: 'tiles',
                        tileGrid: new ol.tilegrid.WMTS({
                            origin: ol.extent.getTopLeft(projectionExtent),
                            resolutions: resolutions,
                            matrixIds: matrixIds,
                        }),
                        style: 'default'
                    });
                    var l1 = map.getLayers().getArray()[0];
                    l1.setSource(s1);

                    var s2 = new ol.source.WMTS({
                        url: 'http://srv.zjditu.cn/ZJEMAPANNO_2D/wmts',
                        layer: 'cva',
                        format: 'tiles',
                        tileGrid: new ol.tilegrid.WMTS({
                            origin: ol.extent.getTopLeft(projectionExtent),
                            resolutions: resolutions,
                            matrixIds: matrixIds,
                        }),
                        style: 'default'
                    });
                    var l2 = map.getLayers().getArray()[1];
                    l2.setSource(s2);
                } else {
                    var s1 = new ol.source.WMTS({
                        url: 'http://srv.tianditusx.cn/KQEMAP/wmts.asmx/wmts',
                        layer: 'KQEMAP',
                        format: 'image/png',
                        matrixSet:"TileMatrixSet0",
                        tileGrid: new ol.tilegrid.WMTS({
                            origin: ol.extent.getTopLeft(projectionExtent),
                            resolutions: resolutions,
                            matrixIds: matrixIds,
                        }),
                        style: 'default'
                    });
                    var l1 = map.getLayers().getArray()[0];
                    l1.setSource(s1);

                    var s2 = new ol.source.WMTS({
                        url: 'http://srv.tianditusx.cn/KQEMAPANNO/wmts.asmx/wmts',
                        layer: 'KQEMAPANNO',
                        format: 'image/png',
                        matrixSet: "TileMatrixSet0",
                        tileGrid: new ol.tilegrid.WMTS({
                            origin: ol.extent.getTopLeft(projectionExtent),
                            resolutions: resolutions,
                            matrixIds: matrixIds,
                        }),
                        style: 'default'
                    });
                    var l2 = map.getLayers().getArray()[1];
                    l2.setSource(s2);
                }
                map.render();
            });
        }
    </script>
</body>
</html>